(LABEL REF_AVANT_VM)
(MOVE (-2 FP) R0)
(PUSH R0)
(LABEL 47)
(MOVE (3 FP) R0)
(CMP R0)
(JEQ (@ 48))
(MOVE (3 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LISTP))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(CMP R0)
(JEQ (@ 50))
(JMP (@ 51))
(LABEL 50)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ LOAD) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 53))
(JMP (@ 54))
(LABEL 53)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE ($ ETIQUETTE) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ NTH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LIST))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 52))
(LABEL 54)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ STORE) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 55))
(JMP (@ 56))
(LABEL 55)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ NTH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE ($ ETIQUETTE) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LIST))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 52))
(LABEL 56)
(JMP (@ 57))
(JMP (@ 58))
(LABEL 57)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE ($ ETIQUETTE) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LIST))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 52))
(LABEL 58)
(LABEL 52)
(MOVE (3 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LENGTH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 59))
(MOVE (3 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R0)
(STORE R0 (3 FP))
(JMP (@ 60))
(LABEL 59)
(MOVE (3 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(POP R0)
(STORE R0 (3 FP))
(LABEL 60)
(JMP (@ 49))
(LABEL 51)
(JMP (@ 61))
(JMP (@ 62))
(LABEL 61)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ LOAD) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 64))
(JMP (@ 65))
(LABEL 64)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE ($ ETIQUETTE) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ NTH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LIST))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 63))
(LABEL 65)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ STORE) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 66))
(JMP (@ 67))
(LABEL 66)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ NTH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE ($ ETIQUETTE) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LIST))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 63))
(LABEL 67)
(JMP (@ 68))
(JMP (@ 69))
(LABEL 68)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE ($ ETIQUETTE) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LIST))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 63))
(LABEL 69)
(LABEL 63)
(MOVE ($ NIL) R0)
(PUSH R0)
(POP R0)
(STORE R0 (3 FP))
(JMP (@ 49))
(LABEL 62)
(LABEL 49)
(JMP (@ 47))
(LABEL 48)
(DECR SP)
(RTN)
(HALT)
(LABEL ___LOADER___)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ LABEL) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 23))
(LABEL 28)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ JUMPP))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(CMP R0)
(JEQ (@ 29))
(JMP (@ 27))
(LABEL 29)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CAADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ @) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 30))
(JMP (@ 27))
(LABEL 30)
(JMP (@ 25))
(LABEL 27)
(LABEL 34)
(MOVE ($ LOAD) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 35))
(JMP (@ 33))
(LABEL 35)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LISTP))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(CMP R0)
(JEQ (@ 36))
(JMP (@ 33))
(LABEL 36)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CAADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ @) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 37))
(JMP (@ 33))
(LABEL 37)
(JMP (@ 31))
(LABEL 33)
(LABEL 41)
(MOVE ($ STORE) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 42))
(JMP (@ 40))
(LABEL 42)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADDR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LISTP))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(CMP R0)
(JEQ (@ 43))
(JMP (@ 40))
(LABEL 43)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CAADDR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ @) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 44))
(JMP (@ 40))
(LABEL 44)
(JMP (@ 38))
(LABEL 40)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ INTEGERP))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(CMP R0)
(JEQ (@ 45))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 46))
(LABEL 45)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LABEL 46)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(SUB R1 R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 39))
(LABEL 38)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CDADDR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 5) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ ___LOADER___STORE))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LABEL 39)
(JMP (@ 32))
(LABEL 31)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADDR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 5) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ ___LOADER___LOAD))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LABEL 32)
(JMP (@ 26))
(LABEL 25)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 4) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ ___LOADER___JUMP))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LABEL 26)
(JMP (@ 24))
(LABEL 23)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ ___LOADER___LABEL))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LABEL 24)
(RTN)
(HALT)
(LABEL ___LOADER___STORE)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ ETIQUETTE) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(CMP R0)
(JEQ (@ 19))
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CDADDR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ REF_AVANT) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ NIL) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 21))
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ REF_AVANT) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LIST))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ REF_AVANT) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFHASH R2 R1 R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 22))
(LABEL 21)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ REF_AVANT) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFHASH R2 R1 R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LABEL 22)
(JMP (@ 20))
(LABEL 19)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ ETIQUETTE) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LIST))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LABEL 20)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(SUB R1 R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(RTN)
(HALT)
(LABEL ___LOADER___LOAD)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ ETIQUETTE) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(CMP R0)
(JEQ (@ 15))
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ REF_AVANT) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ NIL) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 17))
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ REF_AVANT) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LIST))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ REF_AVANT) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFHASH R2 R1 R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 18))
(LABEL 17)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ REF_AVANT) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFHASH R2 R1 R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LABEL 18)
(JMP (@ 16))
(LABEL 15)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ ETIQUETTE) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LIST))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LABEL 16)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(SUB R1 R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(RTN)
(HALT)
(LABEL ___LOADER___JUMP)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE ($ ETIQUETTE) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(CMP R0)
(JEQ (@ 11))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE ($ REF_AVANT) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ NIL) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 13))
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE ($ REF_AVANT) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LIST))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE ($ REF_AVANT) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFHASH R2 R1 R0)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 14))
(LABEL 13)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE ($ REF_AVANT) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFHASH R2 R1 R0)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LABEL 14)
(JMP (@ 12))
(LABEL 11)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE ($ ETIQUETTE) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LIST))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LABEL 12)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(SUB R1 R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(RTN)
(HALT)
(LABEL ___LOADER___LABEL)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE ($ ETIQUETTE) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ ATOM))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(CMP R0)
(JEQ (@ 7))
(MOVE ($ NIL) R0)
(JMP (@ 8))
(LABEL 7)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE ($ ETIQUETTE) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFHASH R2 R1 R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE ($ REF_AVANT) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(CMP R0)
(JEQ (@ 9))
(MOVE ($ NIL) R0)
(JMP (@ 10))
(LABEL 9)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE ($ REF_AVANT) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ REF_AVANT_VM))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LABEL 10)
(LABEL 8)
(RTN)
(HALT)
(LABEL LOADER_VM)
(JMP (@ 1))
(LABEL 2)
(NOP)
(LABEL 1)
(JMP (@ 3))
(LABEL 4)
(NOP)
(LABEL 3)
(MOVE (-2 FP) R0)
(STORE R0 (@ 2))
(LOAD (@ 2) R2)
(CAR R2 R2)
(STORE R2 (@ 4))
(LABEL 5)
(LOAD (@ 2) R2)
(MOVE ($ NIL) R0)
(CMP R2 R0)
(JEQ (@ 6))
(MOVE (-3 FP) R0)
(PUSH R0)
(LOAD (@ 4) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ ___LOADER___))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LOAD (@ 2) R2)
(CDR R2 R2)
(STORE R2 (@ 2))
(CAR R2 R2)
(STORE R2 (@ 4))
(JMP (@ 5))
(LABEL 6)
(RTN)
(HALT)
nil