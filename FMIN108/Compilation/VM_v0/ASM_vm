(LABEL REF_AVANT_VM)
(MOVE (-2 FP) R0)
(PUSH R0)
(LABEL 350)
(MOVE (3 FP) R0)
(CMP R0)
(JEQ (@ 351))
(MOVE (3 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LISTP))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(CMP R0)
(JEQ (@ 353))
(JMP (@ 354))
(LABEL 353)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ LOAD) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 356))
(JMP (@ 357))
(LABEL 356)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE ($ ETIQUETTE) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ NTH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LIST))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 355))
(LABEL 357)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ STORE) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 358))
(JMP (@ 359))
(LABEL 358)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ NTH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE ($ ETIQUETTE) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LIST))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 355))
(LABEL 359)
(JMP (@ 360))
(JMP (@ 361))
(LABEL 360)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE ($ ETIQUETTE) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LIST))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 355))
(LABEL 361)
(LABEL 355)
(MOVE (3 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LENGTH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 362))
(MOVE (3 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R0)
(STORE R0 (3 FP))
(JMP (@ 363))
(LABEL 362)
(MOVE (3 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(POP R0)
(STORE R0 (3 FP))
(LABEL 363)
(JMP (@ 352))
(LABEL 354)
(JMP (@ 364))
(JMP (@ 365))
(LABEL 364)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ LOAD) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 367))
(JMP (@ 368))
(LABEL 367)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE ($ ETIQUETTE) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ NTH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LIST))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 366))
(LABEL 368)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ STORE) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 369))
(JMP (@ 370))
(LABEL 369)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ NTH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE ($ ETIQUETTE) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LIST))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 366))
(LABEL 370)
(JMP (@ 371))
(JMP (@ 372))
(LABEL 371)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE ($ ETIQUETTE) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LIST))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 366))
(LABEL 372)
(LABEL 366)
(MOVE ($ NIL) R0)
(PUSH R0)
(POP R0)
(STORE R0 (3 FP))
(JMP (@ 352))
(LABEL 365)
(LABEL 352)
(JMP (@ 350))
(LABEL 351)
(DECR SP)
(RTN)
(HALT)
(LABEL ___LOADER___)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ LABEL) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 326))
(LABEL 331)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ JUMPP))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(CMP R0)
(JEQ (@ 332))
(JMP (@ 330))
(LABEL 332)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CAADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ @) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 333))
(JMP (@ 330))
(LABEL 333)
(JMP (@ 328))
(LABEL 330)
(LABEL 337)
(MOVE ($ LOAD) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 338))
(JMP (@ 336))
(LABEL 338)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LISTP))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(CMP R0)
(JEQ (@ 339))
(JMP (@ 336))
(LABEL 339)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CAADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ @) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 340))
(JMP (@ 336))
(LABEL 340)
(JMP (@ 334))
(LABEL 336)
(LABEL 344)
(MOVE ($ STORE) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 345))
(JMP (@ 343))
(LABEL 345)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADDR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LISTP))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(CMP R0)
(JEQ (@ 346))
(JMP (@ 343))
(LABEL 346)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CAADDR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ @) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 347))
(JMP (@ 343))
(LABEL 347)
(JMP (@ 341))
(LABEL 343)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ INTEGERP))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(CMP R0)
(JEQ (@ 348))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 349))
(LABEL 348)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LABEL 349)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(SUB R1 R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 342))
(LABEL 341)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CDADDR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 5) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ ___LOADER___STORE))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LABEL 342)
(JMP (@ 335))
(LABEL 334)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADDR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 5) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ ___LOADER___LOAD))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LABEL 335)
(JMP (@ 329))
(LABEL 328)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 4) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ ___LOADER___JUMP))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LABEL 329)
(JMP (@ 327))
(LABEL 326)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ ___LOADER___LABEL))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LABEL 327)
(RTN)
(HALT)
(LABEL ___LOADER___STORE)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ ETIQUETTE) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(CMP R0)
(JEQ (@ 322))
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CDADDR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ REF_AVANT) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ NIL) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 324))
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ REF_AVANT) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LIST))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ REF_AVANT) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFHASH R2 R1 R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 325))
(LABEL 324)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ REF_AVANT) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFHASH R2 R1 R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LABEL 325)
(JMP (@ 323))
(LABEL 322)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ ETIQUETTE) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LIST))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LABEL 323)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(SUB R1 R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(RTN)
(HALT)
(LABEL ___LOADER___LOAD)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ ETIQUETTE) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(CMP R0)
(JEQ (@ 318))
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ REF_AVANT) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ NIL) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 320))
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ REF_AVANT) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LIST))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ REF_AVANT) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFHASH R2 R1 R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 321))
(LABEL 320)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ REF_AVANT) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFHASH R2 R1 R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LABEL 321)
(JMP (@ 319))
(LABEL 318)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ ETIQUETTE) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LIST))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LABEL 319)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE (-6 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(SUB R1 R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(RTN)
(HALT)
(LABEL ___LOADER___JUMP)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE ($ ETIQUETTE) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(CMP R0)
(JEQ (@ 314))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE ($ REF_AVANT) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ NIL) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 316))
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE ($ REF_AVANT) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LIST))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE ($ REF_AVANT) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFHASH R2 R1 R0)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 317))
(LABEL 316)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE ($ REF_AVANT) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFHASH R2 R1 R0)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LABEL 317)
(JMP (@ 315))
(LABEL 314)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE ($ ETIQUETTE) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LIST))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LABEL 315)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE (-5 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(SUB R1 R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(RTN)
(HALT)
(LABEL ___LOADER___LABEL)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE ($ ETIQUETTE) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ ATOM))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(CMP R0)
(JEQ (@ 310))
(MOVE ($ NIL) R0)
(JMP (@ 311))
(LABEL 310)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE ($ ETIQUETTE) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFHASH R2 R1 R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE ($ REF_AVANT) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(CMP R0)
(JEQ (@ 312))
(MOVE ($ NIL) R0)
(JMP (@ 313))
(LABEL 312)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE ($ REF_AVANT) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_HASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GETHASH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ REF_AVANT_VM))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LABEL 313)
(LABEL 311)
(RTN)
(HALT)
(LABEL LOADER_VM)
(JMP (@ 304))
(LABEL 305)
(NOP)
(LABEL 304)
(JMP (@ 306))
(LABEL 307)
(NOP)
(LABEL 306)
(MOVE (-2 FP) R0)
(STORE R0 (@ 305))
(LOAD (@ 305) R2)
(CAR R2 R2)
(STORE R2 (@ 307))
(LABEL 308)
(LOAD (@ 305) R2)
(MOVE ($ NIL) R0)
(CMP R2 R0)
(JEQ (@ 309))
(MOVE (-3 FP) R0)
(PUSH R0)
(LOAD (@ 307) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ ___LOADER___))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LOAD (@ 305) R2)
(CDR R2 R2)
(STORE R2 (@ 305))
(CAR R2 R2)
(STORE R2 (@ 307))
(JMP (@ 308))
(LABEL 309)
(RTN)
(HALT)
(LABEL JUMPP)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ (JMP JSR JEQ JNE JG JL JGE JLE)) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ MEMBER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(RTN)
(HALT)
(LABEL REGISTERP)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ (R0 R1 R2 FP SP FE FG FL CO)) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ MEMBER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(RTN)
(HALT)
(LABEL PRINT_VM)
(MOVE ($ 0) R0)
(MOVE RO (@ POS))
(MOVE ($ POS) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ PRINT))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(LABEL 302)
(MOVE (@ POS) R0)
(POP R1)
(SUB R0 R1)
(CMP R1 ($ 0))
(JLE (@ 303))
(MOVE ($ DO) R0)
(INCR (@ POS))
(JMP (@ 302))
(LABEL 303)
(RTN)
(HALT)
(LABEL ___OTHER___)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LENGTH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 300))
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE ($ FP) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LENGTH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(POP R1)
(POP R0)
(ADD R1 R0)
(PUSH R0)
(POP R1)
(POP R0)
(SUB R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CONS))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ ___OTHER___))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 301))
(LABEL 300)
(MOVE (-2 FP) R0)
(LABEL 301)
(RTN)
(HALT)
(LABEL RUN_VM)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ 0) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JG (@ 298))
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE ($ CO) R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SIZE_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(SUB R1 R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 299))
(LABEL 298)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE ($ CO) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LABEL 299)
(RTN)
(HALT)
(LABEL EVAL_VM)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ STORE) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JNEQ (@ 247))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CDR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ STORE_VM))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 245))
(LABEL 247)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ LOAD) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JNEQ (@ 249))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CDR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LOAD_VM))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 245))
(LABEL 249)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ MOVE) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JNEQ (@ 251))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CDR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ MOVE_VM))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 245))
(LABEL 251)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ PUSH) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JNEQ (@ 253))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ PUSH_VM))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 245))
(LABEL 253)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ POP) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JNEQ (@ 255))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ POP_VM))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 245))
(LABEL 255)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ INCR) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JNEQ (@ 257))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ INCR_VM))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 245))
(LABEL 257)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ DECR) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JNEQ (@ 259))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ DECR_VM))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 245))
(LABEL 259)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ ADD) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JNEQ (@ 261))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CDR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ ADD_VM))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 245))
(LABEL 261)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ SUB) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JNEQ (@ 263))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CDR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SUB_VM))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 245))
(LABEL 263)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ MUL) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JNEQ (@ 265))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CDR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ MUL_VM))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 245))
(LABEL 265)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ DIV) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JNEQ (@ 267))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CDR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ DIV_VM))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 245))
(LABEL 267)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ CMP) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JNEQ (@ 269))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CDR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CMP_VM))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 245))
(LABEL 269)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ JSR) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JNEQ (@ 271))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ JSR_VM))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 245))
(LABEL 271)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ JMP) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JNEQ (@ 273))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ JMP_VM))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 245))
(LABEL 273)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ JEQ) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JNEQ (@ 275))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ JEQ_VM))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 245))
(LABEL 275)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ JNE) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JNEQ (@ 277))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ JNE_VM))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 245))
(LABEL 277)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ JLE) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JNEQ (@ 279))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ JLE_VM))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 245))
(LABEL 279)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ JGE) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JNEQ (@ 281))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ JGE_VM))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 245))
(LABEL 281)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ JL) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JNEQ (@ 283))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ JL_VM))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 245))
(LABEL 283)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ JG) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JNEQ (@ 285))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ JG_VM))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 245))
(LABEL 285)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ SETFGET) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JNEQ (@ 287))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CDR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SETFGET_VM))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 245))
(LABEL 287)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ SETFHASH) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JNEQ (@ 289))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CDR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SETFHASH_VM))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 245))
(LABEL 289)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ SETFAREF) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JNEQ (@ 291))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CDR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SETFAREF_VM))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 245))
(LABEL 291)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ HALT) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JNEQ (@ 293))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ HALT_VM))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 245))
(LABEL 293)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ NOP) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JNEQ (@ 295))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ NOP_VM))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 245))
(LABEL 295)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ RTN) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JNEQ (@ 297))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ RTN_VM))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 245))
(LABEL 297)
(LABEL 245)
(RTN)
(HALT)
(LABEL OTHER_VM)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ FP) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(SUB R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ NIL) R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ ___OTHER___))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ APPLY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ R0) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ RTN_VM))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(DECR SP)
(RTN)
(HALT)
(LABEL SETFAREF_VM)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADDR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADDR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFAREF R2 R1 R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(RTN)
(HALT)
(LABEL SETFHASH_VM)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADDR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADDR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFHASH R2 R1 R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(RTN)
(HALT)
(LABEL SETFGET_VM)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADDR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADDR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(RTN)
(HALT)
(LABEL HALT_VM)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ NIL) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_ETAT))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(RTN)
(HALT)
(LABEL NOP_VM)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ CO) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ CO) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(SUB R1 R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(RTN)
(HALT)
(LABEL RTN_VM)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ SP) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(SUB R1 R0)
(PUSH R0)
(MOVE ($ 0) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JL (@ 243))
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ SP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ SP) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(SUB R1 R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ CO) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ SP) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 244))
(LABEL 243)
(MOVE ($ [RTN_vm] Erreur) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ ERROR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LABEL 244)
(RTN)
(HALT)
(LABEL JGE_VM)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ FE) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 241))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ FG) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 241))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ CO) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ CO) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(SUB R1 R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 242))
(LABEL 241)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ CO) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LABEL 242)
(RTN)
(HALT)
(LABEL JG_VM)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ FG) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 239))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ CO) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ CO) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(SUB R1 R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 240))
(LABEL 239)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ CO) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LABEL 240)
(RTN)
(HALT)
(LABEL JLE_VM)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ FE) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 237))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ FL) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 237))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ CO) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ CO) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(SUB R1 R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 238))
(LABEL 237)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ CO) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LABEL 238)
(RTN)
(HALT)
(LABEL JL_VM)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ FL) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 235))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ CO) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ CO) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(SUB R1 R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 236))
(LABEL 235)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ CO) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LABEL 236)
(RTN)
(HALT)
(LABEL JEQ_VM)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ FE) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 233))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ CO) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ CO) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(SUB R1 R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 234))
(LABEL 233)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ CO) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LABEL 234)
(RTN)
(HALT)
(LABEL JNE_VM)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ FE) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 0) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 231))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ CO) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ CO) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(SUB R1 R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 232))
(LABEL 231)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ CO) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LABEL 232)
(RTN)
(HALT)
(LABEL JSR_VM)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ SP) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ CO) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(SUB R1 R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(RTN)
(HALT)
(LABEL JMP_VM)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ CO) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(RTN)
(HALT)
(LABEL CMP_VM)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LENGTH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 219))
(JMP (@ 220))
(LABEL 219)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(CMP R0)
(JEQ (@ 221))
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ FE) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ FG) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ FL) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(JMP (@ 222))
(LABEL 221)
(MOVE ($ 1) R0)
(PUSH R0)
(MOVE ($ FE) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ FG) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ FL) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(LABEL 222)
(JMP (@ 218))
(LABEL 220)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 223))
(JMP (@ 224))
(LABEL 223)
(MOVE ($ 1) R0)
(PUSH R0)
(MOVE ($ FE) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ FG) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ FL) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(JMP (@ 218))
(LABEL 224)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JL (@ 225))
(JMP (@ 226))
(LABEL 225)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ FE) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ FG) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ 1) R0)
(PUSH R0)
(MOVE ($ FL) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(JMP (@ 218))
(LABEL 226)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JG (@ 227))
(JMP (@ 228))
(LABEL 227)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ FE) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ 1) R0)
(PUSH R0)
(MOVE ($ FG) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ FL) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(JMP (@ 218))
(LABEL 228)
(JMP (@ 229))
(JMP (@ 230))
(LABEL 229)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ FE) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ FG) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ FL) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(JMP (@ 218))
(LABEL 230)
(LABEL 218)
(RTN)
(HALT)
(LABEL SUB_VM)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R1)
(POP R0)
(SUB R1 R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(RTN)
(HALT)
(LABEL DIV_VM)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R1)
(POP R0)
(DIV R1 R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(RTN)
(HALT)
(LABEL ADD_VM)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R1)
(POP R0)
(ADD R1 R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(RTN)
(HALT)
(LABEL MUL_VM)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R1)
(POP R0)
(MUL R1 R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(RTN)
(HALT)
(LABEL DECR_VM)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ REGISTERP))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(CMP REGISTERP R0)
(JNEQ (@ 216))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(SUB R1 R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 217))
(LABEL 216)
(MOVE ($ [DECR_vm] DECR seulement pour les registres) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ ERROR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LABEL 217)
(RTN)
(HALT)
(LABEL INCR_VM)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ REGISTERP))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(CMP REGISTERP R0)
(JNEQ (@ 214))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(ADD R1 R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 215))
(LABEL 214)
(MOVE ($ [INCR_vm] INCR seulement pour les registres) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ ERROR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LABEL 215)
(RTN)
(HALT)
(LABEL POP_VM)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ SP) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ FP) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 212))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ SP) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ SP) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(SUB R1 R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ SP) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ CO) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ CO) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(SUB R1 R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 213))
(LABEL 212)
(MOVE ($ [POP_vm] Impossible de dépiler) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ ERROR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LABEL 213)
(RTN)
(HALT)
(LABEL PUSH_VM)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ SP) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ CO) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 210))
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ SP) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ SP) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(ADD R1 R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ CO) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ CO) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(SUB R1 R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ SP) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 211))
(LABEL 210)
(MOVE ($ [PUSH_vm] Erreur le code se trouve sur la pile) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ ERROR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(LABEL 211)
(RTN)
(HALT)
(LABEL MOVE_VM)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ REGISTERP))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(CMP R0)
(JEQ (@ 204))
(JMP (@ 205))
(LABEL 204)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(JMP (@ 203))
(LABEL 205)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CAAR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ $) R0)
(PUSH R0)
(POP R1)
(POP R0)
(CMP R0 R1)
(JEQ (@ 206))
(JMP (@ 207))
(LABEL 206)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADAR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(JMP (@ 203))
(LABEL 207)
(JMP (@ 208))
(JMP (@ 209))
(LABEL 208)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADAR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CAAR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R1)
(POP R0)
(ADD R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(JMP (@ 203))
(LABEL 209)
(LABEL 203)
(RTN)
(HALT)
(LABEL STORE_VM)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ REGISTERP))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(CMP R0)
(JEQ (@ 197))
(JMP (@ 198))
(LABEL 197)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 196))
(LABEL 198)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ INTEGERP))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(CMP R0)
(JEQ (@ 199))
(JMP (@ 200))
(LABEL 199)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 196))
(LABEL 200)
(JMP (@ 201))
(JMP (@ 202))
(LABEL 201)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CAADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R1)
(POP R0)
(ADD R1 R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(JMP (@ 196))
(LABEL 202)
(LABEL 196)
(RTN)
(HALT)
(LABEL LOAD_VM)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ INTEGERP))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(CMP R0)
(JEQ (@ 192))
(JMP (@ 193))
(LABEL 192)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(JMP (@ 191))
(LABEL 193)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ REGISTERP))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(CMP R0)
(JEQ (@ 194))
(JMP (@ 195))
(LABEL 194)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R1)
(CAR R1 R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ CADR))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(JMP (@ 191))
(LABEL 195)
(LABEL 191)
(RTN)
(HALT)
(LABEL SET_DEBUG)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ DEBUG) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(RTN)
(HALT)
(LABEL GET_DEBUG)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ DEBUG) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(RTN)
(HALT)
(LABEL SET_ETAT)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ RUN) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(RTN)
(HALT)
(LABEL GET_ETAT)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ RUN) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(RTN)
(HALT)
(LABEL GET_HASH)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(RTN)
(HALT)
(LABEL SIZE_MEMORY)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ MEMORY) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LENGTH))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(RTN)
(HALT)
(LABEL SET_MEMORY)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE ($ MEMORY) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFAREF R2 R1 R0)
(RTN)
(HALT)
(LABEL GET_MEMORY)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ MEMORY) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ AREF))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(RTN)
(HALT)
(LABEL SET_REGISTER)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(RTN)
(HALT)
(LABEL GET_REGISTER)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(RTN)
(HALT)
(LABEL APPLY_VM)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ GET_REGISTER))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ LOADER_VM))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(MOVE (-4 FP) R0)
(PUSH R0)
(MOVE (3 FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ RUN_VM))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(DECR SP)
(RTN)
(HALT)
(LABEL CLEAN_VM)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ R0) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ R1) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ R2) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ SP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ FL) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ FE) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ FG) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ STOP) R0)
(PUSH R0)
(MOVE ($ ETAT) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ NIL) R0)
(PUSH R0)
(MOVE ($ RUN) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ NIL) R0)
(PUSH R0)
(MOVE ($ DEBUG) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ 0) R0)
(MOVE RO (@ POS))
(LABEL 189)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ POS) R0)
(PUSH R0)
(MOVE ($ NIL) R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(MOVE R0 R1)
(MOVE (@ POS) R0)
(SUB R0 R1)
(CMP R1 ($ 0))
(JLE (@ 190))
(MOVE ($ DO) R0)
(INCR (@ POS))
(JMP (@ 189))
(LABEL 190)
(RTN)
(HALT)
(LABEL RESET_VM)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ R0) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ R1) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ R2) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ FP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ SP) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ FL) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ FE) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ FG) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SIZE_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(SUB R1 R0)
(PUSH R0)
(MOVE ($ CO) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SIZE_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(SUB R1 R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ SIZE) R0)
(PUSH R0)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ MAKE-HASH-TABLE))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ ETIQUETTE) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ SIZE) R0)
(PUSH R0)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ MAKE-HASH-TABLE))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ REF_AVANT) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ STOP) R0)
(PUSH R0)
(MOVE ($ ETAT) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ NIL) R0)
(PUSH R0)
(MOVE ($ RUN) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ NIL) R0)
(PUSH R0)
(MOVE ($ DEBUG) R0)
(PUSH R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ 0) R0)
(MOVE RO (@ POS))
(LABEL 187)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ POS) R0)
(PUSH R0)
(MOVE ($ NIL) R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SET_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(MOVE R0 R1)
(MOVE (@ POS) R0)
(SUB R0 R1)
(CMP R1 ($ 0))
(JLE (@ 188))
(MOVE ($ DO) R0)
(INCR (@ POS))
(JMP (@ 187))
(LABEL 188)
(RTN)
(HALT)
(LABEL MAKE_VM)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ :INITIAL-ELEMENT) R0)
(PUSH R0)
(MOVE ($ NIL) R0)
(PUSH R0)
(MOVE ($ 3) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ MAKE-ARRAY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ MEMORY) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ R0) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ R1) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ R2) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ FP) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ SP) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE (-2 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(SUB R1 R0)
(PUSH R0)
(MOVE ($ CO) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ SIZE_MEMORY))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ 1) R0)
(PUSH R0)
(POP R1)
(POP R0)
(SUB R1 R0)
(PUSH R0)
(MOVE ($ NEXT_FREE_POS) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ FL) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ FE) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ FG) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ :SIZE) R0)
(PUSH R0)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ MAKE-HASH-TABLE))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ ETIQUETTE) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ :SIZE) R0)
(PUSH R0)
(MOVE ($ 0) R0)
(PUSH R0)
(MOVE ($ 2) R0)
(PUSH R0)
(INCR R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB R0 R2)
(PUSH R2)
(PUSH R1)
(JSR (@ MAKE-HASH-TABLE))
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(MOVE ($ REF_AVANT) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ NIL) R0)
(PUSH R0)
(MOVE ($ RUN) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE ($ NIL) R0)
(PUSH R0)
(MOVE ($ DEBUG) R0)
(PUSH R0)
(MOVE (-3 FP) R0)
(PUSH R0)
(POP R2)
(POP R1)
(POP R0)
(SETFGET R2 R1 R0)
(MOVE (-3 FP) R0)
(RTN)
(HALT)
nil
